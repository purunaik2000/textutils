{"version":3,"sources":["components/Navbar.js","components/Alert.js","components/TextBox.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","mode","dist","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","head1","head2","onClick","toggleMode","htmlFor","Alert","alert","role","word","low","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","TextBox","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heading","name","value","onChange","event","target","backgroundColor","rows","c","document","getElementById","select","navigator","clipboard","writeText","showAlert","newText","split","join","n","length","count","m","x","About","feedback","setfeedback","App","setmode","_useState3","_useState4","setalert","message","setTimeout","body","react_router_dist","exact","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.4ee2969c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// import PropTypes from 'prop-types';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`} >\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">{props.head1}</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/About\">{props.head2}</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div className={`form-check form-switch text-${(props.mode==='light')?'dark':'light'}`}>\r\n                        <input className='form-check-input' onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckedDefault\"/>\r\n                        <label className='form-check-label' htmlFor=\"flexSwitchCheckedDefault\">{`${(props.mode==='dark')?'Disable':'Enable'} dark mode`}</label>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    );\r\n}\r\n\r\n// Navbar.PropTypes = {\r\n//     title: PropTypes.string.isRequired,\r\n//     head1: PropTypes.string,\r\n//     head2: PropTypes.string\r\n// }\r\n\r\n// Navbar.defaultProps = { title: \"Title\" }","import React from 'react';\r\n\r\nexport default function Alert(props) {\r\n  const capitalize = (word)=>{\r\n    const low = word.toLowerCase();\r\n    return low.charAt(0).toUpperCase()+low.slice(1);\r\n  }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} fade show`} role='alert'>\r\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState} from 'react';\r\n\r\nexport default function TextBox(props) {\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  }\r\n\r\n\r\n// Utility buttons\r\n  const handleOnClickCo = () =>{\r\n    var c = document.getElementById(\"myBox\");\r\n    c.select();\r\n    navigator.clipboard.writeText(c.value);\r\n    props.showAlert(\"Copied to clipboard!\" , \"success\");\r\n  }\r\n  \r\n  const handleOnClickUp = () =>{\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Uppercase!\" , \"success\");\r\n  }\r\n  \r\n  const handleOnClickLo = () =>{\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lowercase!\" , \"success\");\r\n  }\r\n  \r\n  const handleOnClickRe = () =>{\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra spaces are Removed!\" , \"success\");\r\n  }\r\n\r\n  const handleOnClickCl = () =>{\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"The textbox is now empty! Please write something.\", \"success\")\r\n  }\r\n\r\n\r\n// Function to count number of words:\r\n\r\n//  function x(){\r\n//   let x = text.split(\" \");\r\n//   let n = x.length;\r\n//   if(x[n-1]===\"\") n-=1;\r\n//   return n;\r\n//  }\r\n\r\n function x(){\r\n  let n = text.length;\r\n  let count = 0;\r\n  for(let m=0;m<n;m++){\r\n    if(text.charAt(m)!==\" \"){\r\n      count++;\r\n      while(m<n){\r\n        if(text.charAt(m)===\" \") break;\r\n        m++;\r\n      }\r\n    }\r\n  }\r\n  return count;\r\n }\r\n\r\n  const [text,setText] = useState(\"Enter text\");\r\n  return (\r\n    <div style={{color: props.mode==='dark'?'white':'black'}}>\r\n      <div>\r\n          <h1>{props.heading}</h1>\r\n          <div className=\"mb-3\">\r\n              <textarea name=\"myBox\" id=\"myBox\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'black':'white', color: props.mode==='dark'?'white':'black'}} rows=\"12\" className=\"form-control\"></textarea>\r\n          </div>\r\n      </div>\r\n      <div className='btn-primary-container'>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleOnClickCo}>Copy</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleOnClickUp}>Convert to UPPER case</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleOnClickLo}>Convert to lower case</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleOnClickRe}>Remove extra space</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleOnClickCl}>Clear</button>\r\n      </div>\r\n      <div className='my-3'>\r\n        <h1>Summary</h1>\r\n        <p>{x()} words {text.length} characters. </p>\r\n      </div>\r\n    </divr\n  );\r\n}\r\n","import React, {useState} from 'react';\r\n\r\nexport default function About(props) {\r\n    const [feedback, setfeedback] = useState(\"\");\r\n\r\n    const handleOnChange = (event) =>{\r\n        setfeedback(event.target.value);\r\n    }\r\n\r\n    const handleOnClick = () =>{\r\n        setfeedback(\"\");\r\n        props.showAlert(\"Thanks for your feedback.\" , \"success\");\r\n    }\r\n  return (\r\n    <div style={{color: props.mode==='dark'?'white':'black'}}>\r\n      <h1>About App</h1>\r\n      <p>This is a text utils app which is very useful to manupulate the text according to you. You can easily enter your text and manupulate without any adertizement.</p>\r\n\r\n      <h1>About Creator</h1>\r\n      <p>This app is created by Purushottam Naik.</p>\r\n      <p>We you want to Create such apps do contact on details below.</p>\r\n      <p>Put your feedback below for improvement of this app. Your feedback can help and motivate us to improve this app.</p>\r\n\r\n      <h1>Feedback</h1>\r\n      <p>Type your suggestion here...</p>\r\n      <textarea className='form-control' value={feedback} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'black':'white', color: props.mode==='dark'?'white':'black'}}></textarea>\r\n      <button className='btn btn-primary my-3' onClick={handleOnClick}>Submit</button>\r\n    </div>\r\n  );\r\n}\r\n","\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Alert from './components/Alert';\nimport TextBox from './components/TextBox';\nimport React, { useState } from 'react';\nimport About from './components/About';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes\n} from \"react-router-dom\";\n\n\nfunction App() {\n\n  const [mode, setmode] = useState('light');\n  const [alert, setalert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 2000);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = 'black';\n      showAlert(\"Darkmode has been Enabled\", \"success\");\n    }\n    else {\n      setmode('light');\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Darkmode has been Disabled\", \"success\");\n    }\n  }\n\n  return (\n    <>\n    <Router>\n      <Navbar title='TextUtils' head1='Home' head2='About' mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n\n      <div className=\"container my-3\">\n        <Routes>\n          <Route exact path='/' element={<TextBox heading=\"Enter the text here to convert\" mode={mode} showAlert={showAlert} />}/>\n          <Route exact path='/About' element={<About mode={mode} showAlert={showAlert} />} />\n        </Routes>\n      </div>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}